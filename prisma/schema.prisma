// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    CUSTOMER
    ACTOR
    DIRECTOR
}

model User {
    id          String          @id @default(cuid()) @unique
    name        String
    email       String          @unique
    password    String
    role        Role
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
    orders      Order[]
}

model Movie {
    id          String           @id @default(cuid()) @unique
    title       String
    price       Int
    releaseYear Int
    imageUrl    String
    orderItems  OrderItem[]
    persons     PersonsInMovies[]
    genres      Genre[]         @relation("MovieGenres")
}

model Genre {
    id          String          @id @default(cuid()) @unique
    name        String
    description String
    movies      Movie[]         @relation("MovieGenres")
}

model Order {
    id          String          @id @default(cuid()) @unique
    totalAmount Int
    status      Boolean
    customerId  String
    customer    User            @relation(fields: [customerId], references: [id])
    orderItems  OrderItem[]
    orderDate   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

model OrderItem {
    id              String      @id @default(cuid()) @unique
    movieId         String
    orderId         String
    movie           Movie       @relation(fields: [movieId], references: [id])
    order           Order       @relation(fields: [orderId], references: [id])
    quantity        Int
    priceAtPurchase Int
}

model Person {
    id          String          @id @default(cuid()) @unique
    name        String
    description String
    role        Role
    createdAt   DateTime        @default(now())
    movies      PersonsInMovies[]
}

model PersonsInMovies {
    id        String            @id @default(cuid()) @unique
    movieId   String
    movie     Movie             @relation(fields: [movieId], references: [id])
    personId  String
    person    Person            @relation(fields: [personId], references: [id])
}